# Dockerfile References: https://docs.docker.com/engine/reference/builder/
##
## Build
##
# It starts from the python base image.
FROM python:3.10 as builder

# Add maintainer info.
LABEL maintainer="√çcaro Ribeiro <icaroribeiro@hotmail.com>"

# Set the working directory inside the container.
WORKDIR /app

# Copy the source code from the temporary directory to the working directory inside the container.
COPY .temp .

# Set up environment variables.
ENV POETRY_HOME="/opt/poetry" \
    #POETRY_VIRTUALENVS_CREATE=false \
    POETRY_VIRTUALENVS_IN_PROJECT=1 \
    POETRY_NO_INTERACTION=1

# It is to run poetry directly as soon as it's installed.
ENV PATH="$POETRY_HOME/bin:$PATH"

# Install curl and poetry.
RUN apt-get update \
    && apt-get install -y curl \
    && curl -sSL https://install.python-poetry.org | python3 \
    && chmod 755 ${POETRY_HOME}/bin/poetry

# Create the folder /app/.venv and install runtime dependencies.
RUN poetry install --no-dev --no-root --no-ansi

##
## Deploy
##
# Second stage started from the slim base image.
FROM python:3.10-slim

# Set up the environment variables.
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PATH="/app/.venv/bin:$PATH"

# Set the environment variable that deals with the application deployment in Heroku Platform.
# ENV DEPLOY=YES

# Set the working directory inside the container.
WORKDIR /app

# Copy the venv folder from the previous stage.
COPY --from=builder /app/.venv ./venv
COPY docker-entrypoint.sh ./

RUN . ./venv/bin/activate && pip install *.whl
CMD ["./docker-entrypoint.sh"]

# Command to run the application.
# CMD [ "poetry", "run", "python", "-m", "flask", "run", "--host=0.0.0.0" ]